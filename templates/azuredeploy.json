{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string",
            "metadata": {
                "description": "The name of the function app that you wish to create."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of the Bellhop deployment."
            }
        },
        "engineInterval": {
            "type": "string",
            "metadata": {
                "description": "The interval at which the Bellhop engine should execute."
            }
        },
        "engineReaderGUID": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "GUID for engine reader role on subscription."
            }
        },
        "scalerContributorGUID": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            "metadata": {
                "description": "GUID for scaler contributor role on subscription."
            }
        }
    },
    "variables": {
        "readerRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "contributorRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[concat(parameters('appName'), '-rg')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[parameters('engineReaderGUID')]",
            "dependsOn": [
                "bellhopDeploy"
            ],
            "properties": {
                "scope": "[subscription().id]",
                "roleDefinitionId": "[variables('readerRole')]",
                "principalId": "[reference('bellhopDeploy').outputs.enginePrincipalId.value]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[parameters('scalerContributorGUID')]",
            "dependsOn": [
                "bellhopDeploy"
            ],
            "properties": {
                "scope": "[subscription().id]",
                "roleDefinitionId": "[variables('contributorRole')]",
                "principalId": "[reference('bellhopDeploy').outputs.scalerPrincipalId.value]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "bellhopDeploy",
            "resourceGroup": "[concat(parameters('appName'), '-rg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('appName'), '-rg'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "appName": {
                        "value": "[parameters('appName')]"
                    },
                    "engineInterval": {
                        "value": "[parameters('engineInterval')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "appName": {
                            "type": "string",
                            "metadata": {
                                "description": "The name of the function app that you wish to create."
                            }
                        },
                        "engineInterval": {
                            "type": "string",
                            "metadata": {
                                "description": "The interval at which the Bellhop engine should execute."
                            }
                        },
                        "storageAccountType": {
                            "type": "string",
                            "defaultValue": "Standard_LRS",
                            "allowedValues": [
                                "Standard_LRS",
                                "Standard_GRS",
                                "Standard_RAGRS"
                            ],
                            "metadata": {
                                "description": "Storage Account type"
                            }
                        },
                        "queueName": {
                            "type": "string",
                            "defaultValue": "autoscale",
                            "metadata": {
                                "description": "The name of the function app that you wish to create."
                            }
                        },
                        "scalerRuntime": {
                            "type": "string",
                            "defaultValue": "powershell",
                            "allowedValues": [
                                "node",
                                "dotnet",
                                "java",
                                "powershell"
                            ],
                            "metadata": {
                                "description": "The language worker runtime to load in the scaler function app."
                            }
                        },
                        "engineRuntime": {
                            "type": "string",
                            "defaultValue": "dotnet",
                            "allowedValues": [
                                "node",
                                "dotnet",
                                "java",
                                "powershell"
                            ],
                            "metadata": {
                                "description": "The language worker runtime to load in the engine function app."
                            }
                        },
                        "appConfigReaderGUID": {
                            "type": "string",
                            "defaultValue": "[newGuid()]",
                            "metadata": {
                                "description": "GUID for engine reader role on the app config service."
                            }
                        },
                        "storageQueueDataMessageSenderGUID": {
                            "type": "string",
                            "defaultValue": "[newGuid()]",
                            "metadata": {
                                "description": "GUID for engine storage queue contributor role on the storage account."
                            }
                        }
                    },
                    "variables": {
                        "funcAppName": "[concat(parameters('appName'), '-function')]",
                        "scalerFuncName": "[concat(variables('funcAppName'), '-scaler')]",
                        "engineFuncName": "[concat(variables('funcAppName'), '-engine')]",
                        "storAcctName": "[concat(parameters('appName'), 'stgacct')]",
                        "storQueueName": "[concat(variables('storAcctName'), '/default/', parameters('queueName'))]",
                        "hostingPlanName": "[concat(parameters('appName'), '-asp')]",
                        "appInsightsName": "[concat(parameters('appName'), '-appinsights')]",
                        "appConfigName": "[concat(parameters('appName'), '-appconfig')]",
                        "appConfigReaderRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '516239f1-63e1-4d78-a4de-a74fb236a071')]",
                        "storageQueueDataMessageSenderRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c6a89b2d-59bc-44d0-9896-0f6e12d7b80a')]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2019-06-01",
                            "name": "[variables('storAcctName')]",
                            "location": "[resourceGroup().location]",
                            "sku": {
                                "name": "[parameters('storageAccountType')]"
                            },
                            "kind": "Storage"
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/queueServices",
                            "apiVersion": "2020-08-01-preview",
                            "name": "[concat(variables('storAcctName'), '/default')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName'))]"
                            ],
                            "properties": {
                                "cors": {
                                    "corsRules": [
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
                            "apiVersion": "2019-06-01",
                            "name": "[variables('storQueueName')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName'))]",
                                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('storAcctName'), 'default')]"
                            ],
                            "properties": {
                                "metadata": {
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/serverfarms",
                            "apiVersion": "2020-06-01",
                            "name": "[variables('hostingPlanName')]",
                            "location": "[resourceGroup().location]",
                            "kind": "linux",
                            "sku": {
                                "name": "EP1",
                                "tier": "ElasticPremium"
                            },
                            "properties": {
                                "name": "[variables('hostingPlanName')]",
                                "workerSize": 3,
                                "workerSizeId": 3,
                                "numberOfWorkers": 1,
                                "maximumElasticWorkerCount": "20",
                                "reserved": true
                            }
                        },
                        {
                            "type": "Microsoft.Web/sites",
                            "apiVersion": "2020-06-01",
                            "name": "[variables('engineFuncName')]",
                            "location": "[resourceGroup().location]",
                            "kind": "functionapp,linux",
                            "dependsOn": [
                                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName'))]",
                                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))]"
                            ],
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                                "clientAffinityEnabled": false,
                                "siteConfig": {
                                    "appSettings": [
                                        {
                                            "name": "AzureWebJobsStorage",
                                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storAcctName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName')), '2019-06-01').keys[0].value)]"
                                        },
                                        {
                                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storAcctName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName')), '2019-06-01').keys[0].value)]"
                                        },
                                        {
                                            "name": "WEBSITE_CONTENTSHARE",
                                            "value": "[toLower(variables('engineFuncName'))]"
                                        },
                                        {
                                            "name": "FUNCTIONS_EXTENSION_VERSION",
                                            "value": "~3"
                                        },
                                        {
                                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                                        },
                                        {
                                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').ConnectionString]"
                                        },
                                        {
                                            "name": "FUNCTIONS_WORKER_RUNTIME",
                                            "value": "[parameters('engineRuntime')]"
                                        },
                                        {
                                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                                            "value": "false"
                                        },
                                        {
                                            "name": "DOCKER_REGISTRY_SERVER_URL",
                                            "value": "https://index.docker.io/v1"
                                        },
                                        {
                                            "name": "AppConfigEndpoint",
                                            "value": "[reference(resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))).endpoint]"
                                        },
                                        {
                                            "name": "ENGINE_TIMER_EXPRESSION",
                                            "value": "[parameters('engineInterval')]"
                                        }
                                    ],
                                    "use32BitWorkerProcess": false,
                                    "linuxFxVersion": "DOCKER|azurebellhop/engine:v0.4"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/sites",
                            "apiVersion": "2020-06-01",
                            "name": "[variables('scalerFuncName')]",
                            "location": "[resourceGroup().location]",
                            "kind": "functionapp,linux",
                            "dependsOn": [
                                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName'))]"
                            ],
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                                "clientAffinityEnabled": false,
                                "siteConfig": {
                                    "appSettings": [
                                        {
                                            "name": "AzureWebJobsStorage",
                                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storAcctName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName')), '2019-06-01').keys[0].value)]"
                                        },
                                        {
                                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storAcctName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName')), '2019-06-01').keys[0].value)]"
                                        },
                                        {
                                            "name": "WEBSITE_CONTENTSHARE",
                                            "value": "[toLower(variables('scalerFuncName'))]"
                                        },
                                        {
                                            "name": "FUNCTIONS_EXTENSION_VERSION",
                                            "value": "~3"
                                        },
                                        {
                                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').InstrumentationKey]"
                                        },
                                        {
                                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                            "value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsName')), '2020-02-02-preview').ConnectionString]"
                                        },
                                        {
                                            "name": "FUNCTIONS_WORKER_RUNTIME",
                                            "value": "[parameters('scalerRuntime')]"
                                        },
                                        {
                                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                                            "value": "false"
                                        },
                                        {
                                            "name": "DOCKER_REGISTRY_SERVER_URL",
                                            "value": "https://index.docker.io/v1"
                                        }
                                    ],
                                    "use32BitWorkerProcess": false,
                                    "linuxFxVersion": "DOCKER|azurebellhop/scaler:v0.3"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/components",
                            "apiVersion": "2020-02-02-preview",
                            "name": "[variables('appInsightsName')]",
                            "location": "[resourceGroup().location]",
                            "tags": {
                                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('appInsightsName')))]": "Resource"
                            },
                            "properties": {
                                "ApplicationId": "[variables('appInsightsName')]",
                                "Request_Source": "IbizaWebAppExtensionCreate"
                            }
                        },
                        {
                            "type": "Microsoft.AppConfiguration/configurationStores",
                            "apiVersion": "2020-06-01",
                            "name": "[variables('appConfigName')]",
                            "location": "[resourceGroup().location]",
                            "sku": {
                                "name": "standard"
                            }
                        },
                        {
                            "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
                            "apiVersion": "2020-07-01-preview",
                            "name": "[concat(variables('appConfigName'), '/storageAccount')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))]"
                            ],
                            "properties": {
                                "value": "[variables('storAcctName')]",
                                "contentType": "string"
                            }
                        },
                        {
                            "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
                            "apiVersion": "2020-07-01-preview",
                            "name": "[concat(variables('appConfigName'), '/storageQueue')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))]"
                            ],
                            "properties": {
                                "value": "[parameters('queueName')]",
                                "contentType": "string"
                            }
                        },
                        {
                            "type": "Microsoft.AppConfiguration/configurationStores/keyValues",
                            "apiVersion": "2020-07-01-preview",
                            "name": "[concat(variables('appConfigName'), '/debugMode')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))]"
                            ],
                            "properties": {
                                "value": "false",
                                "contentType": "string"
                            }
                        },
                        {
                            "type": "Microsoft.AppConfiguration/configurationStores/providers/roleAssignments",
                            "apiVersion": "2020-04-01-preview",
                            "name": "[concat(variables('appConfigName'), '/Microsoft.Authorization/', parameters('appConfigReaderGUID'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))]",
                                "[resourceId('Microsoft.Web/Sites', variables('engineFuncName'))]"
                            ],
                            "properties": {
                                "scope": "[resourceId('Microsoft.AppConfiguration/configurationStores', variables('appConfigName'))]",
                                "roleDefinitionId": "[variables('appConfigReaderRole')]",
                                "principalId": "[reference(resourceId('Microsoft.Web/Sites', variables('engineFuncName')), '2020-09-01', 'full').identity.principalId]"
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                            "apiVersion": "2020-04-01-preview",
                            "name": "[concat(variables('storAcctName'), '/Microsoft.Authorization/', parameters('storageQueueDataMessageSenderGUID'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName'))]",
                                "[resourceId('Microsoft.Web/Sites', variables('engineFuncName'))]"
                            ],
                            "properties": {
                                "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storAcctName'))]",
                                "roleDefinitionId": "[variables('storageQueueDataMessageSenderRole')]",
                                "principalId": "[reference(resourceId('Microsoft.Web/Sites', variables('engineFuncName')), '2020-09-01', 'full').identity.principalId]"
                            }
                        }
                    ],
                    "outputs": {
                        "enginePrincipalId": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Web/Sites', variables('engineFuncName')), '2020-09-01', 'full').identity.principalId]"
                        },
                        "scalerPrincipalId": {
                            "type": "string",
                            "value": "[reference(resourceId('Microsoft.Web/Sites', variables('scalerFuncName')), '2020-09-01', 'full').identity.principalId]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {}
}
